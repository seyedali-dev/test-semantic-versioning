name: Build and Push on Merge to Main

on:
  pull_request:
    types: [ closed ]
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-push-frontend:
#    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get Version from package.json
        id: get_version
        run: echo "VERSION=$(node -p "require('./frontend/package.json').version")" >> $GITHUB_ENV

      - name: Build and Push Frontend Docker Image
        uses: docker/build-push-action@v5
        with:
          context: frontend/
          file: frontend/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/frontend:${{ env.VERSION }}
            ${{ secrets.DOCKER_USERNAME }}/frontend:latest

  build-and-push-backend:
#    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Backend Docker Image
        working-directory: backend/freetoolsy-server
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          TAG="${{ secrets.DOCKER_USERNAME }}/backend:${VERSION}"
          TAG_LATEST="${{ secrets.DOCKER_USERNAME }}/backend:latest"
          echo "Building and pushing Docker image: $TAG and $TAG_LATEST"
          mvn compile jib:build \
            -Dimage=$TAG \
            -Djib.to.tags=${VERSION},latest \
            -Djib.useOnlyProjectCache=true \
            -Djib.allowInsecureRegistries=false